plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}


group = 'com.company'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	testRuntimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'
	// https://mvnrepository.com/artifact/com.github.gavlyukovskiy/datasource-proxy-spring-boot-starter
	implementation group: 'com.github.gavlyukovskiy', name: 'datasource-proxy-spring-boot-starter', version: '1.8.0'


}

tasks.named('test') {
	useJUnitPlatform()
}


jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.enabled true
		csv.enabled true
		html.enabled true
		html.destination file("$buildDir/reports/jacoco")
	}
}

jacoco {
	toolVersion = "0.8.8"

}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
			excludes = []
		}

		rule {
			enabled = true
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
			excludes = []
		}
	}
}
test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestCoverageVerification.dependsOn jacocoTestReport
